{"version":3,"file":"static/js/969.8dc67da1.chunk.js","mappings":"+QAee,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACX,GAAG,CAACV,KAGFW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,CAAEC,GAAI,QACfC,WAAY,SACZC,cAAe,UACfC,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACP,GAAI,CAAEQ,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAAIL,UACtCC,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEa,WAAY,IAAKC,MAAO,WAAYT,SAAC,uBAKtEC,EAAAA,EAAAA,KAACS,EAAAA,GAAY,KAEbT,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACP,GAAI,CAAEQ,MAAO,EAAGC,GAAI,EAAGC,GAAI,GAAIL,UACtCC,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEa,WAAY,IAAKC,MAAO,WAAYT,SAAC,eAKrEhB,EAAS2B,QACRlB,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAZ,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAc,KACfZ,EAAAA,EAAAA,KAACa,EAAAA,GAAW,QAGdb,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iCAGJb,IAAcE,IAASY,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAE5BC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACP,GAAI,CAAEQ,MAAO,EAAGC,GAAI,EAAGC,GAAI,OAG1C,C","sources":["pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\nimport { ContactList, ContactsFilter, ContactsForm } from 'components';\n\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        display: { xs: 'flex' },\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Divider sx={{ width: 1, pt: 2, pb: 1 }}>\n        <Typography variant=\"h5\" sx={{ fontWeight: 700, color: '#9d53c3' }}>\n          Add new contact\n        </Typography>\n      </Divider>\n\n      <ContactsForm />\n\n      <Divider sx={{ width: 1, pt: 2, pb: 1 }}>\n        <Typography variant=\"h5\" sx={{ fontWeight: 700, color: '#9d53c3' }}>\n          Contacts\n        </Typography>\n      </Divider>\n\n      {contacts.length ? (\n        <>\n          <ContactsFilter />\n          <ContactList />\n        </>\n      ) : (\n        <p>No any contacts in phonebook</p>\n      )}\n\n      {isLoading && !error && <h2>Loading...</h2>}\n\n      <Divider sx={{ width: 1, pt: 2, pb: 1 }} />\n    </Box>\n  );\n}\n"],"names":["Contacts","dispatch","useDispatch","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","_jsxs","Box","sx","display","xs","alignItems","flexDirection","children","_jsx","Divider","width","pt","pb","Typography","variant","fontWeight","color","ContactsForm","length","_Fragment","ContactsFilter","ContactList"],"sourceRoot":""}